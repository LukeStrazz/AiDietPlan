@model Services.ViewModels.UserInfoViewModel

<section>
    <h2>Create a New Goal</h2>
    <form id="goalForm" class="row gx-2 gy-1 align-items-center">
        <input type="hidden" id="userSecretId" value="@Model.Sid" />
        <hr class="rounded">

        <div class="col-sm-3">
            <label for="targetWeight">Target Weight</label>
            <input type="number"
                   class="form-control"
                   id="targetWeight"
                   placeholder="Target Weight"
                   min="50"
                   max="700"/>
        </div>

        <div class="col-sm-3">
            <label for="startDate">Start Date</label>
            <input type="date"
                   class="form-control"
                   id="startDate"
                   placeholder="Start Date" />
        </div>

        <div class="col-sm-3">
            <label for="endDate">End Date</label>
            <input type="date"
                   class="form-control"
                   id="endDate"
                   placeholder="End Date" />
        </div>

        <div class="col-sm-12 mb-2">
            <label for="description">Description</label>
            <textarea class="form-control" id="description" placeholder="Goal description"></textarea>
        </div>

        <div class="col-auto">
            <button id="submit" type="submit" class="btn btn-primary">Submit</button>
        </div>
    </form>
</section>

<h2>Your Current Goals</h2>
@if (Model.Goals?.Any() == true)
{
    <ul>
        @foreach (var goal in Model.Goals)
        {
            <div class="card w-50 mb-2">
                <div class="card-body">
                    <h5 class="card-title">Goal</h5>
                    <p><strong>Description:</strong> @goal.Description</p>
                    <p><strong>Start Date:</strong> @goal.startingGoalDate.ToShortDateString()</p>
                    <p><strong>End Date:</strong> @goal.endGoalDate.ToShortDateString()</p>
                    <p><strong>Status:</strong> @(goal.resolved ? "Resolved" : "In Progress")</p>
                    <a href="#" class="btn btn-primary">Resolve the Goal</a>
                </div>
            </div>
            <div class="progress mb-2">
                <div class="progress-bar bg-success" style="width: 25%">25%</div>
            </div>
            <hr class="solid">
        }
    </ul>
}
else
{
    <p>You don't have any goals yet. Create one above!</p>
}

<script>
    document.getElementById("goalForm").addEventListener("submit", function(event){
        event.preventDefault();

        const goalData = {
            userSecretId: document.getElementById("userSecretId").value,
            resolved: false,
            startDate: document.getElementById("startDate").value,
            endDate: document.getElementById("endDate").value,
            description: document.getElementById("description").value
        };

        if (!goalData.startDate || !goalData.endDate || !goalData.description) {
            alert("Please fill out all required fields.");
            return;
        }

        fetch("/api/GoalController/CreateGoal", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(goalData)
        })
        .then(response => response.ok ? response.json() : Promise.reject(response.text()))
        .then(data => alert("Success: " + data))
        .catch(error => alert("Error: " + error.message));
    });
</script>
