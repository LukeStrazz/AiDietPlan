@model Services.ViewModels.UserInfoViewModel


<section>
    <h2>Create a New Goal</h2>
    <form id="goalForm" class="row gx-3 gy-2 align-items-center">
        <input type="hidden" id="userSecretId" value="@Model.Sid" />
        <hr class="rounded">
        <div class="col-sm-3">
            <label class="visually-hidden" for="specificSizeInputName">Weight</label>
            <input type="number"
                   class="form-control"
                   id="targetWeight"
                   placeholder="Target Weight"
                   min="50"
                   max="700"/>
        </div>

        <div class="col-sm-3">
            <label class="visually-hidden" for="specificSizeInputGroupUsername">Start Date</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="date"
                       class="form-control"
                       id="startDate"
                       placeholder="Start Date" />
            </div>
        </div>


        <div class="col-sm-3">
            <label class="visually-hidden" for="specificSizeInputGroupUsername">End Date</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="date"
                       class="form-control"
                       id="endDate"
                       placeholder="End Date" />
            </div>
        </div>

        <div class="col-auto">
            <button id="submit" type="submit" class="btn btn-primary">Submit</button>
        </div>

        <div class="mb-3">
        <textarea 
                class="form-control"
                id="description"
                placeholder="Please enter description for your goal"
                ></textarea>
        </div>
    </form>
</section>


<h2>Your Current Goals</h2>
@if (Model.Goals != null && Model.Goals.Any())
{
    <ul>
        @foreach (var goal in Model.Goals)
        {
            <li>
                <strong>Description:</strong> @goal.Description <br />
                <strong>Start Date:</strong> @goal.startingGoalDate.ToShortDateString() <br />
                <strong>End Date:</strong> @goal.endGoalDate.ToShortDateString() <br />
                <strong>Status:</strong> @(goal.resolved ? "Resolved" : "In Progress")
                <hr class="solid">
            </li>
        }
    </ul>
}
else
{
    <p>You don't have any goals yet. Create one below!</p>
}


<script>

    const goalForm = document.getElementById("goalForm");
    
    goalForm.addEventListener("submit", function(event){
    event.preventDefault();

    const userSecretId = document.getElementById("userSecretId").value;
    const resolved = false;
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;
    const description = document.getElementById("description").value;
    


    if(!startDate || !endDate || !description){
        alert("Please fill out all required fields.");
        return;
    }

    const goalInfo = {
        userSecretId: userSecretId, 
        resolved: resolved,
        startDate: new Date(startDate),
        endDate: new Date(endDate),
        description: description
    };

    const goalData = JSON.stringify(goalInfo);
    const url = "/api/GoalController/CreateGoal";

    
    

    fetch(url, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: goalData
        })
        .then(response => {
            if (!response.ok) {
                return response.text().then(text => { throw new Error(text); });
            }
            return response.json();
        })
        .then(data => alert("Success: " + data))
        .catch(error => alert("Error: " + error.message));
    });
</script>